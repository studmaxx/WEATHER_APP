{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\Tutorial\\\\weather-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\nimport Weather from './app_component/weather.component'; //api call to \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_key = \"e783e94c7662e09c899f628e856b5532\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeather = async () => {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_key}`);\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celcius: this.calCelcius(response.main.temp),\n        temp_max: this.calCelcius(response.main)\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celcius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n  }\n\n  calCelcius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Weather, {\n        city: this.state.city,\n        country: this.state.country,\n        temp_celsius: this.state.celcius,\n        temp_max: this.state.temp_max,\n        temp_min: this.state.temp_min,\n        description: this.state.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/asus/Desktop/Tutorial/weather-app/src/App.js"],"names":["React","Weather","API_key","App","Component","constructor","props","getWeather","api_call","fetch","response","json","console","log","setState","city","name","country","sys","celcius","calCelcius","main","temp","temp_max","state","undefined","icon","temp_min","description","error","cell","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;AACA,OAAO,qCAAP;AACA,OAAOC,OAAP,MAAoB,mCAApB,C,CAEA;;;AACA,MAAMC,OAAO,GAAC,kCAAd;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;;AADF,SAoBAC,UApBA,GAoBW,YAAU;AACnB,YAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAE,oEAAmEP,OAAQ,EAA7E,CAA1B;AACA,YAAMQ,QAAQ,GAAC,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,WAAKI,QAAL,CAAc;AACZC,QAAAA,IAAI,EAACL,QAAQ,CAACM,IADF;AAEZC,QAAAA,OAAO,EAACP,QAAQ,CAACQ,GAAT,CAAaD,OAFT;AAGZE,QAAAA,OAAO,EAAC,KAAKC,UAAL,CAAgBV,QAAQ,CAACW,IAAT,CAAcC,IAA9B,CAHI;AAIZC,QAAAA,QAAQ,EAAC,KAAKH,UAAL,CAAgBV,QAAQ,CAACW,IAAzB;AAJG,OAAd;AAMD,KA9BD;;AAEE,SAAKG,KAAL,GAAa;AACXT,MAAAA,IAAI,EAACU,SADM;AAEXR,MAAAA,OAAO,EAACQ,SAFG;AAGXC,MAAAA,IAAI,EAACD,SAHM;AAIXJ,MAAAA,IAAI,EAACI,SAJM;AAKXN,MAAAA,OAAO,EAACM,SALG;AAMXF,MAAAA,QAAQ,EAACE,SANE;AAOXE,MAAAA,QAAQ,EAACF,SAPE;AAQXG,MAAAA,WAAW,EAAE,EARF;AASXC,MAAAA,KAAK,EAAC;AATK,KAAb;AAWA,SAAKtB,UAAL;AACD;;AAEDa,EAAAA,UAAU,CAACE,IAAD,EAAM;AACd,QAAIQ,IAAI,GAACC,IAAI,CAACC,KAAL,CAAWV,IAAI,GAAC,MAAhB,CAAT;AACA,WAAOQ,IAAP;AACD;;AAYDG,EAAAA,MAAM,GAAE;AACN,wBAAQ;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACR,QAAC,OAAD;AACA,QAAA,IAAI,EAAE,KAAKT,KAAL,CAAWT,IADjB;AAEA,QAAA,OAAO,EAAE,KAAKS,KAAL,CAAWP,OAFpB;AAGA,QAAA,YAAY,EAAE,KAAKO,KAAL,CAAWL,OAHzB;AAIA,QAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWD,QAJrB;AAKA,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWG,QALrB;AAMA,QAAA,WAAW,EAAE,KAAKH,KAAL,CAAWI;AANxB;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,YAAR;AAUD;;AA5C8B;;AA8CjC,eAAezB,GAAf","sourcesContent":["import React from 'react';\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\nimport Weather from './app_component/weather.component';\n\n//api call to \nconst API_key=\"e783e94c7662e09c899f628e856b5532\"\n\nclass App extends React.Component{\n  constructor(props) \n  {\n    super(props)\n    this.state = {\n      city:undefined,\n      country:undefined,\n      icon:undefined,\n      main:undefined,\n      celcius:undefined,\n      temp_max:undefined,\n      temp_min:undefined,\n      description: \"\",\n      error:false \n       }\n    this.getWeather()\n  }\n\n  calCelcius(temp){\n    let cell=Math.floor(temp-273.15)\n    return cell\n  }\n  getWeather=async() =>{\n    const api_call=await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_key}`)\n    const response=await api_call.json()\n    console.log(response)\n    this.setState({\n      city:response.name,\n      country:response.sys.country,\n      celcius:this.calCelcius(response.main.temp),\n      temp_max:this.calCelcius(response.main)\n    })\n  }\n  render(){\n    return( <div className=\"App\">\n    <Weather \n    city={this.state.city} \n    country={this.state.country}\n    temp_celsius={this.state.celcius}\n    temp_max={this.state.temp_max}\n    temp_min={this.state.temp_min}\n    description={this.state.description}\n    />\n  </div>)\n  } \n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}